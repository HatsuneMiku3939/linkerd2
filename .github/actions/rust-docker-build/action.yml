name: Rust Image Build
description: Builds linkerd's rust images

inputs:
  docker-ghcr-username:
    description: GH username under which to push images
    required: true
  docker-ghcr-pat:
    description: GH PAT for docker-ghcr-username
    required: true
  component:
    description: Image to build
    required: true
  component-path:
    description: Path to component
    required: true
  arch:
    description: Target architecture
    required: true
  tag:
    description: Docker image tag
    required: true

runs:
  using: composite
  steps:
    - uses: linkerd/dev/actions/setup-tools@v36
    - uses: actions/cache@v3
      with:
        path: ${{ runner.temp }}/.buildx-cache
        key: ${{ inputs.component }}-${{ inputs.arch }}-${{ inputs.tag }}
        restore-keys: ${{ inputs.component }}-
    - uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ inputs.docker-ghcr-username }}
        password: ${{ inputs.docker-ghcr-pat }}
    - name: Build and push ${{ inputs.component }} ${{ inputs.arch }}
      shell: bash
      run: |
        docker buildx build --push . \
          -f ./${{ inputs.component-path }}/${{ inputs.arch }}.dockerfile \
          --tag=ghcr.io/${{ github.repository_owner }}/${{ inputs.component }}:${{ inputs.tag }}-${{ inputs.arch }} \
          --cache-from type=local,src=${{ runner.temp }}/.buildx-cache \
          --cache-to type=local,dest=${{ runner.temp }}/.buildx-cache,mode=max

    # Delete older docker images to prevent cache bloat.
    - run: just-dev prune-action-cache '${{ runner.temp }}/.buildx-cache'
      shell: bash

outputs:
  image:
    description: The image that was built
    value: ghcr.io/${{ github.repository_owner }}/${{ inputs.component }}:${{ inputs.tag }}-${{ inputs.arch }}
